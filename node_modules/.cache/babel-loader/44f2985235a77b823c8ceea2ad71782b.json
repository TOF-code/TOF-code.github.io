{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/gebruiker1/projects VS code/music app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/gebruiker1/projects VS code/music app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var clientId='734956a8c8904f718a0bcbd975ff15f4';// Insert client ID here.\nvar redirectUri='http://localhost:3000/';// Have to add this to your accepted Spotify redirect URIs on the Spotify API.\nvar accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}var accessTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accessTokenMatch&&expiresInMatch){accessToken=accessTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);window.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');// This clears the parameters, allowing us to grab a new access token when it expires.\nreturn accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);window.location=accessUrl;}},search:function search(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri};});});},savePlaylist:function savePlaylist(name,trackUris){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var accessToken,headers,userId,response,jsonResponse,response_1,jsonResponse_1,playlistId;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!name||!trackUris.length)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:accessToken=Spotify.getAccessToken();headers={Authorization:\"Bearer \".concat(accessToken)};_context.next=6;return fetch('https://api.spotify.com/v1/me',{headers:headers});case 6:response=_context.sent;_context.next=9;return response.json();case 9:jsonResponse=_context.sent;userId=jsonResponse.id;_context.next=13;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})});case 13:response_1=_context.sent;_context.next=16;return response_1.json();case 16:jsonResponse_1=_context.sent;playlistId=jsonResponse_1.id;_context.next=20;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackUris})});case 20:return _context.abrupt(\"return\",_context.sent);case 21:case\"end\":return _context.stop();}}},_callee);}))();}};export default Spotify;","map":{"version":3,"sources":["C:/Users/gebruiker1/projects VS code/music app/src/util/Spotify.js"],"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","response_1","jsonResponse_1","playlistId","uris"],"mappings":"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","sourcesContent":["const clientId = '734956a8c8904f718a0bcbd975ff15f4'; // Insert client ID here.\r\nconst redirectUri = 'http://localhost:3000/'; // Have to add this to your accepted Spotify redirect URIs on the Spotify API.\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/'); // This clears the parameters, allowing us to grab a new access token when it expires.\r\n      return accessToken;\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if (!jsonResponse.tracks) {\r\n        return [];\r\n      }\r\n      return jsonResponse.tracks.items.map(track => ({\r\n        id: track.id,\r\n        name: track.name,\r\n        artist: track.artists[0].name,\r\n        album: track.album.name,\r\n        uri: track.uri\r\n      }));\r\n    });\r\n  },\r\n\r\n  async savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n\r\n    const response = await fetch('https://api.spotify.com/v1/me', { headers: headers }\r\n      );\r\n      const jsonResponse = await response.json();\r\n      userId = jsonResponse.id;\r\n      const response_1 = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({ name: name })\r\n      });\r\n      const jsonResponse_1 = await response_1.json();\r\n      const playlistId = jsonResponse_1.id;\r\n      return await fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({ uris: trackUris })\r\n      });\r\n  }\r\n};\r\n\r\nexport default Spotify;\r\n"]},"metadata":{},"sourceType":"module"}