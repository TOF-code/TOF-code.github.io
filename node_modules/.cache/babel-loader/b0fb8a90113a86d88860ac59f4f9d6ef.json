{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gebruiker1\\\\projects VS code\\\\music app\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [{\n        name: 'name7',\n        artist: 'artist7',\n        id: 7,\n        album: 'album7'\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        id: 2,\n        album: 'album2'\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        id: 3,\n        album: 'album3'\n      }],\n      playlistTracks: [{\n        name: 'name7',\n        artist: 'artist7',\n        id: 7,\n        album: 'album7'\n      }, {\n        name: 'name2',\n        artist: 'artist2',\n        id: 2,\n        album: 'album2'\n      }, {\n        name: 'name3',\n        artist: 'artist3',\n        id: 3,\n        album: 'album3'\n      }],\n      playlistName: 'favorites'\n    };\n    this.addTrack = this.addTrack.bind(this);\n  }\n\n  addTrack(newTrack) {\n    let list = this.state.playlistTracks;\n\n    if (list.find(savedTrack => savedTrack.id === newTrack.id)) {\n      return;\n    } else {\n      this.setState({\n        playListTracks: playlistTracks.push(newTrack)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTracks()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistTracks: this.state.playlistTracks,\n            playlistName: this.state.playlistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/gebruiker1/projects VS code/music app/src/components/App/App.js"],"names":["React","SearchBar","SearchResults","Playlist","App","Component","constructor","props","state","searchResults","name","artist","id","album","playlistTracks","playlistName","addTrack","bind","newTrack","list","find","savedTrack","setState","playListTracks","push","render","addTracks"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './App.css';\r\nimport SearchBar from '../SearchBar/SearchBar'; \r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Playlist from '../Playlist/Playlist';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchResults: [{name: 'name7', artist: 'artist7', id: 7, album: 'album7' }, {name: 'name2', artist: 'artist2', id: 2, album: 'album2' }, {name: 'name3', artist: 'artist3', id: 3, album: 'album3'}],\r\n      playlistTracks: [{name: 'name7', artist: 'artist7', id: 7, album: 'album7' }, {name: 'name2', artist: 'artist2', id: 2, album: 'album2' }, {name: 'name3', artist: 'artist3', id: 3, album: 'album3'}],\r\n      playlistName: 'favorites'\r\n    };\r\n    this.addTrack = this.addTrack.bind(this);\r\n  }\r\n\r\n  addTrack (newTrack) {\r\n    let list = this.state.playlistTracks\r\n    if (list.find(savedTrack => savedTrack.id === newTrack.id)) {\r\n      return;\r\n    } else {\r\n      this.setState({playListTracks: playlistTracks.push(newTrack)})\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\r\n          <div className=\"App\">\r\n              <SearchBar />\r\n              <div className=\"App-playlist\">\r\n              <SearchResults searchResults={this.state.searchResults} onAdd={this.addTracks()}  />\r\n              <Playlist playlistTracks={this.state.playlistTracks} playlistName={this.state.playlistName} />\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}